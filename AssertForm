import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject

import org.junit.Assert
import org.junit.Before
import org.openqa.selenium.By
import org.openqa.selenium.WebDriver
import org.openqa.selenium.remote.server.DriverFactory

import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import internal.GlobalVariable as GlobalVariable

//CustomKeywords.'configuracion.consultarSubModulo.consultarModulo'()
println ("print")

public class VerificarLeabelsInformation {
	
	WebDriver driver
	
	@Test
	
	public void testVerificarLeabelsInformation () {
		
				
		'Abrir el nevegador'
		WebUI.openBrowser('')

		'Controlar el navegador'
		WebDriver driver = DriverFactory.getWebDriver()

		'controlador de timeout'
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS)

		'Mazimizar ventana del navegador'
		driver.manage().window().maximize() //

		'boton cerrar popup'
		driver.findElement(By.xpath("//*[@id='']/div/div/div[1]/button/span")).click()

		'Click en boton cambiar de empresa'
		driver.findElement(By.xpath("//a[contains()]")).click()

		'Click elemento'
		driver.findElement(By.xpath("")).click()
		
		'Click sub elemento'
		driver.findElement(By.linkText("//a")).click()  
		
		'Seleccionar opcion'
		driver.findElement(By.xpath("option[@value = '']").click()
		
		'Assertion comprobacion tagName o campos tipoIdentificacion con cedula ciudadania'
		String tId = driver.findElement(By.id("campo")).getText()
		driver.findElement(By.tagName("nombreCampo")).click();
		Assert.assertEquals(By.id(tId, "campo","nombre la opcion"))
		
		'Assertion comprobacion tagName o campos tipoIdentificacion con cedula ciudadania'
Assert.assertEquals(By.id('tipoIdentificacion')).getText()
------------------------------------------------------Other Validations Forms-------------------------------------------------
'Seleccionar Elemento tipo Identificacion'
driver.findElement(By.tagName('type identification')).click()

'Assertion o comprobacion '
String tId = "Identification number"

Assert.assertTrue(tId.contains("*"),"Obligatory Field")
 
Assert.assertEquals(By.id(tId, "type identification","/option[@value=\'1\']"))

Assert.assertSame( tId, "Identification number")

/*
String identificacion = new identificacion("iId", "type identification","/option[@value=\'1\']")
Assert.that(tId.identification().equals(tId))
*/

'Ingresar número de Id'
driver.findElement(By.id('//*[@id="identification"]')).sendKeys("100000000")

'Nombre del Titular'
driver.findElement(By.id('//*[@id="Name"]')).sendKeys("Name")

'Primer Apellido'
driver.findElement(By.id('//*[@id="firtsNameLabel"]')).sendKeys("SpellOne")

'Segundo Apellido'
driver.findElement(By.id('//*[@id="secoundSpell"]')).sendKeys("SpellTwo")

'Número de tarjeta de crédito'
driver.findElement(By.id('//*[@id="creditcard"]')).sendKeys("70000000")

'Botón enviar o consultar'
driver.findElement(By.id('//*[@id="send"]')).click()

'Botón Otra consulta'
driver.findElement(By.id('//*[@id="clean"]')).click()
/*
'Comprobacion numero identificacion'
String numC = driver.findElement(By.id(numId,'type identification')).getText()
driver.findElement(By.id("//*[@id="identification"]")).click()
Assert.assertEquals(By.id(numId, 'type identification', '7009090'))
*/

	
}
